### YamlMime:ManagedReference
items:
- uid: Agora.Infrastructure.Repositories.TransactionRepository
  commentId: T:Agora.Infrastructure.Repositories.TransactionRepository
  id: TransactionRepository
  parent: Agora.Infrastructure.Repositories
  children:
  - Agora.Infrastructure.Repositories.TransactionRepository.#ctor(Agora.Infrastructure.Data.AgoraDbContext)
  - Agora.Infrastructure.Repositories.TransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
  - Agora.Infrastructure.Repositories.TransactionRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.Transaction},Agora.Core.Interfaces.Filters.ITransactionFilter)
  - Agora.Infrastructure.Repositories.TransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
  - Agora.Infrastructure.Repositories.TransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
  - Agora.Infrastructure.Repositories.TransactionRepository.GetTransactionByIdAsync(System.Int64)
  - Agora.Infrastructure.Repositories.TransactionRepository.IsPostInOnGoingTransactionAsync(System.Int64)
  - Agora.Infrastructure.Repositories.TransactionRepository.IsPostInTransactionAsync(System.Int64)
  - Agora.Infrastructure.Repositories.TransactionRepository.SaveChangesAsync
  langs:
  - csharp
  - vb
  name: TransactionRepository
  nameWithType: TransactionRepository
  fullName: Agora.Infrastructure.Repositories.TransactionRepository
  type: Class
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: TransactionRepository
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 8
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  syntax:
    content: 'public class TransactionRepository : ITransactionRepository'
    content.vb: Public Class TransactionRepository Implements ITransactionRepository
  inheritance:
  - System.Object
  implements:
  - Agora.Core.Interfaces.Repositories.ITransactionRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Agora.Infrastructure.Repositories.TransactionRepository.#ctor(Agora.Infrastructure.Data.AgoraDbContext)
  commentId: M:Agora.Infrastructure.Repositories.TransactionRepository.#ctor(Agora.Infrastructure.Data.AgoraDbContext)
  id: '#ctor(Agora.Infrastructure.Data.AgoraDbContext)'
  parent: Agora.Infrastructure.Repositories.TransactionRepository
  langs:
  - csharp
  - vb
  name: TransactionRepository(AgoraDbContext)
  nameWithType: TransactionRepository.TransactionRepository(AgoraDbContext)
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.TransactionRepository(Agora.Infrastructure.Data.AgoraDbContext)
  type: Constructor
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: .ctor
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 8
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  syntax:
    content: public TransactionRepository(AgoraDbContext context)
    parameters:
    - id: context
      type: Agora.Infrastructure.Data.AgoraDbContext
    content.vb: Public Sub New(context As AgoraDbContext)
  overload: Agora.Infrastructure.Repositories.TransactionRepository.#ctor*
  nameWithType.vb: TransactionRepository.New(AgoraDbContext)
  fullName.vb: Agora.Infrastructure.Repositories.TransactionRepository.New(Agora.Infrastructure.Data.AgoraDbContext)
  name.vb: New(AgoraDbContext)
- uid: Agora.Infrastructure.Repositories.TransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
  commentId: M:Agora.Infrastructure.Repositories.TransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
  id: GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
  parent: Agora.Infrastructure.Repositories.TransactionRepository
  langs:
  - csharp
  - vb
  name: GetAllTransactionsAsync(ITransactionFilter)
  nameWithType: TransactionRepository.GetAllTransactionsAsync(ITransactionFilter)
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: GetAllTransactionsAsync
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 10
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<IReadOnlyList<Transaction>> GetAllTransactionsAsync(ITransactionFilter filter)
    parameters:
    - id: filter
      type: Agora.Core.Interfaces.Filters.ITransactionFilter
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{Agora.Core.Models.Transaction}}
    content.vb: Public Function GetAllTransactionsAsync(filter As ITransactionFilter) As Task(Of IReadOnlyList(Of Transaction))
  overload: Agora.Infrastructure.Repositories.TransactionRepository.GetAllTransactionsAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.ITransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
- uid: Agora.Infrastructure.Repositories.TransactionRepository.GetTransactionByIdAsync(System.Int64)
  commentId: M:Agora.Infrastructure.Repositories.TransactionRepository.GetTransactionByIdAsync(System.Int64)
  id: GetTransactionByIdAsync(System.Int64)
  parent: Agora.Infrastructure.Repositories.TransactionRepository
  langs:
  - csharp
  - vb
  name: GetTransactionByIdAsync(long)
  nameWithType: TransactionRepository.GetTransactionByIdAsync(long)
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.GetTransactionByIdAsync(long)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: GetTransactionByIdAsync
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 49
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<Transaction?> GetTransactionByIdAsync(long id)
    parameters:
    - id: id
      type: System.Int64
    return:
      type: System.Threading.Tasks.Task{Agora.Core.Models.Transaction}
    content.vb: Public Function GetTransactionByIdAsync(id As Long) As Task(Of Transaction)
  overload: Agora.Infrastructure.Repositories.TransactionRepository.GetTransactionByIdAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.ITransactionRepository.GetTransactionByIdAsync(System.Int64)
  nameWithType.vb: TransactionRepository.GetTransactionByIdAsync(Long)
  fullName.vb: Agora.Infrastructure.Repositories.TransactionRepository.GetTransactionByIdAsync(Long)
  name.vb: GetTransactionByIdAsync(Long)
- uid: Agora.Infrastructure.Repositories.TransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
  commentId: M:Agora.Infrastructure.Repositories.TransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
  id: AddTransaction(Agora.Core.Models.Transaction)
  parent: Agora.Infrastructure.Repositories.TransactionRepository
  langs:
  - csharp
  - vb
  name: AddTransaction(Transaction)
  nameWithType: TransactionRepository.AddTransaction(Transaction)
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: AddTransaction
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 60
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public void AddTransaction(Transaction transaction)
    parameters:
    - id: transaction
      type: Agora.Core.Models.Transaction
    content.vb: Public Sub AddTransaction(transaction As Transaction)
  overload: Agora.Infrastructure.Repositories.TransactionRepository.AddTransaction*
  implements:
  - Agora.Core.Interfaces.Repositories.ITransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
- uid: Agora.Infrastructure.Repositories.TransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
  commentId: M:Agora.Infrastructure.Repositories.TransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
  id: DeleteTransaction(Agora.Core.Models.Transaction)
  parent: Agora.Infrastructure.Repositories.TransactionRepository
  langs:
  - csharp
  - vb
  name: DeleteTransaction(Transaction)
  nameWithType: TransactionRepository.DeleteTransaction(Transaction)
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: DeleteTransaction
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 65
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public void DeleteTransaction(Transaction transaction)
    parameters:
    - id: transaction
      type: Agora.Core.Models.Transaction
    content.vb: Public Sub DeleteTransaction(transaction As Transaction)
  overload: Agora.Infrastructure.Repositories.TransactionRepository.DeleteTransaction*
  implements:
  - Agora.Core.Interfaces.Repositories.ITransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
- uid: Agora.Infrastructure.Repositories.TransactionRepository.SaveChangesAsync
  commentId: M:Agora.Infrastructure.Repositories.TransactionRepository.SaveChangesAsync
  id: SaveChangesAsync
  parent: Agora.Infrastructure.Repositories.TransactionRepository
  langs:
  - csharp
  - vb
  name: SaveChangesAsync()
  nameWithType: TransactionRepository.SaveChangesAsync()
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.SaveChangesAsync()
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: SaveChangesAsync
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 70
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<bool> SaveChangesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function SaveChangesAsync() As Task(Of Boolean)
  overload: Agora.Infrastructure.Repositories.TransactionRepository.SaveChangesAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.ITransactionRepository.SaveChangesAsync
- uid: Agora.Infrastructure.Repositories.TransactionRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.Transaction},Agora.Core.Interfaces.Filters.ITransactionFilter)
  commentId: M:Agora.Infrastructure.Repositories.TransactionRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.Transaction},Agora.Core.Interfaces.Filters.ITransactionFilter)
  id: ApplySorting(System.Linq.IQueryable{Agora.Core.Models.Transaction},Agora.Core.Interfaces.Filters.ITransactionFilter)
  parent: Agora.Infrastructure.Repositories.TransactionRepository
  langs:
  - csharp
  - vb
  name: ApplySorting(IQueryable<Transaction>, ITransactionFilter)
  nameWithType: TransactionRepository.ApplySorting(IQueryable<Transaction>, ITransactionFilter)
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.ApplySorting(System.Linq.IQueryable<Agora.Core.Models.Transaction>, Agora.Core.Interfaces.Filters.ITransactionFilter)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: ApplySorting
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 75
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public IQueryable<Transaction> ApplySorting(IQueryable<Transaction> query, ITransactionFilter queryParams)
    parameters:
    - id: query
      type: System.Linq.IQueryable{Agora.Core.Models.Transaction}
    - id: queryParams
      type: Agora.Core.Interfaces.Filters.ITransactionFilter
    return:
      type: System.Linq.IQueryable{Agora.Core.Models.Transaction}
    content.vb: Public Function ApplySorting(query As IQueryable(Of Transaction), queryParams As ITransactionFilter) As IQueryable(Of Transaction)
  overload: Agora.Infrastructure.Repositories.TransactionRepository.ApplySorting*
  implements:
  - Agora.Core.Interfaces.Repositories.ITransactionRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.Transaction},Agora.Core.Interfaces.Filters.ITransactionFilter)
  nameWithType.vb: TransactionRepository.ApplySorting(IQueryable(Of Transaction), ITransactionFilter)
  fullName.vb: Agora.Infrastructure.Repositories.TransactionRepository.ApplySorting(System.Linq.IQueryable(Of Agora.Core.Models.Transaction), Agora.Core.Interfaces.Filters.ITransactionFilter)
  name.vb: ApplySorting(IQueryable(Of Transaction), ITransactionFilter)
- uid: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInTransactionAsync(System.Int64)
  commentId: M:Agora.Infrastructure.Repositories.TransactionRepository.IsPostInTransactionAsync(System.Int64)
  id: IsPostInTransactionAsync(System.Int64)
  parent: Agora.Infrastructure.Repositories.TransactionRepository
  langs:
  - csharp
  - vb
  name: IsPostInTransactionAsync(long)
  nameWithType: TransactionRepository.IsPostInTransactionAsync(long)
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInTransactionAsync(long)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: IsPostInTransactionAsync
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 89
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<bool> IsPostInTransactionAsync(long postId)
    parameters:
    - id: postId
      type: System.Int64
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function IsPostInTransactionAsync(postId As Long) As Task(Of Boolean)
  overload: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInTransactionAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInTransactionAsync(System.Int64)
  nameWithType.vb: TransactionRepository.IsPostInTransactionAsync(Long)
  fullName.vb: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInTransactionAsync(Long)
  name.vb: IsPostInTransactionAsync(Long)
- uid: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInOnGoingTransactionAsync(System.Int64)
  commentId: M:Agora.Infrastructure.Repositories.TransactionRepository.IsPostInOnGoingTransactionAsync(System.Int64)
  id: IsPostInOnGoingTransactionAsync(System.Int64)
  parent: Agora.Infrastructure.Repositories.TransactionRepository
  langs:
  - csharp
  - vb
  name: IsPostInOnGoingTransactionAsync(long)
  nameWithType: TransactionRepository.IsPostInOnGoingTransactionAsync(long)
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInOnGoingTransactionAsync(long)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/TransactionRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: IsPostInOnGoingTransactionAsync
    path: Agora.Infrastructure/Repositories/TransactionRepository.cs
    startLine: 94
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<bool> IsPostInOnGoingTransactionAsync(long postId)
    parameters:
    - id: postId
      type: System.Int64
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function IsPostInOnGoingTransactionAsync(postId As Long) As Task(Of Boolean)
  overload: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInOnGoingTransactionAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInOnGoingTransactionAsync(System.Int64)
  nameWithType.vb: TransactionRepository.IsPostInOnGoingTransactionAsync(Long)
  fullName.vb: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInOnGoingTransactionAsync(Long)
  name.vb: IsPostInOnGoingTransactionAsync(Long)
references:
- uid: Agora.Infrastructure.Repositories
  commentId: N:Agora.Infrastructure.Repositories
  href: Agora.html
  name: Agora.Infrastructure.Repositories
  nameWithType: Agora.Infrastructure.Repositories
  fullName: Agora.Infrastructure.Repositories
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Infrastructure
    name: Infrastructure
    href: Agora.Infrastructure.html
  - name: .
  - uid: Agora.Infrastructure.Repositories
    name: Repositories
    href: Agora.Infrastructure.Repositories.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Infrastructure
    name: Infrastructure
    href: Agora.Infrastructure.html
  - name: .
  - uid: Agora.Infrastructure.Repositories
    name: Repositories
    href: Agora.Infrastructure.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Agora.Core.Interfaces.Repositories.ITransactionRepository
  commentId: T:Agora.Core.Interfaces.Repositories.ITransactionRepository
  parent: Agora.Core.Interfaces.Repositories
  href: Agora.Core.Interfaces.Repositories.ITransactionRepository.html
  name: ITransactionRepository
  nameWithType: ITransactionRepository
  fullName: Agora.Core.Interfaces.Repositories.ITransactionRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Agora.Core.Interfaces.Repositories
  commentId: N:Agora.Core.Interfaces.Repositories
  href: Agora.html
  name: Agora.Core.Interfaces.Repositories
  nameWithType: Agora.Core.Interfaces.Repositories
  fullName: Agora.Core.Interfaces.Repositories
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Interfaces
    name: Interfaces
    href: Agora.Core.Interfaces.html
  - name: .
  - uid: Agora.Core.Interfaces.Repositories
    name: Repositories
    href: Agora.Core.Interfaces.Repositories.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Interfaces
    name: Interfaces
    href: Agora.Core.Interfaces.html
  - name: .
  - uid: Agora.Core.Interfaces.Repositories
    name: Repositories
    href: Agora.Core.Interfaces.Repositories.html
- uid: Agora.Infrastructure.Repositories.TransactionRepository.#ctor*
  commentId: Overload:Agora.Infrastructure.Repositories.TransactionRepository.#ctor
  href: Agora.Infrastructure.Repositories.TransactionRepository.html#Agora_Infrastructure_Repositories_TransactionRepository__ctor_Agora_Infrastructure_Data_AgoraDbContext_
  name: TransactionRepository
  nameWithType: TransactionRepository.TransactionRepository
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.TransactionRepository
  nameWithType.vb: TransactionRepository.New
  fullName.vb: Agora.Infrastructure.Repositories.TransactionRepository.New
  name.vb: New
- uid: Agora.Infrastructure.Data.AgoraDbContext
  commentId: T:Agora.Infrastructure.Data.AgoraDbContext
  parent: Agora.Infrastructure.Data
  href: Agora.Infrastructure.Data.AgoraDbContext.html
  name: AgoraDbContext
  nameWithType: AgoraDbContext
  fullName: Agora.Infrastructure.Data.AgoraDbContext
- uid: Agora.Infrastructure.Data
  commentId: N:Agora.Infrastructure.Data
  href: Agora.html
  name: Agora.Infrastructure.Data
  nameWithType: Agora.Infrastructure.Data
  fullName: Agora.Infrastructure.Data
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Infrastructure
    name: Infrastructure
    href: Agora.Infrastructure.html
  - name: .
  - uid: Agora.Infrastructure.Data
    name: Data
    href: Agora.Infrastructure.Data.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Infrastructure
    name: Infrastructure
    href: Agora.Infrastructure.html
  - name: .
  - uid: Agora.Infrastructure.Data
    name: Data
    href: Agora.Infrastructure.Data.html
- uid: Agora.Infrastructure.Repositories.TransactionRepository.GetAllTransactionsAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.TransactionRepository.GetAllTransactionsAsync
  href: Agora.Infrastructure.Repositories.TransactionRepository.html#Agora_Infrastructure_Repositories_TransactionRepository_GetAllTransactionsAsync_Agora_Core_Interfaces_Filters_ITransactionFilter_
  name: GetAllTransactionsAsync
  nameWithType: TransactionRepository.GetAllTransactionsAsync
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.GetAllTransactionsAsync
- uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
  commentId: M:Agora.Core.Interfaces.Repositories.ITransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
  parent: Agora.Core.Interfaces.Repositories.ITransactionRepository
  name: GetAllTransactionsAsync(ITransactionFilter)
  nameWithType: ITransactionRepository.GetAllTransactionsAsync(ITransactionFilter)
  fullName: Agora.Core.Interfaces.Repositories.ITransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
    name: GetAllTransactionsAsync
  - name: (
  - uid: Agora.Core.Interfaces.Filters.ITransactionFilter
    name: ITransactionFilter
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.GetAllTransactionsAsync(Agora.Core.Interfaces.Filters.ITransactionFilter)
    name: GetAllTransactionsAsync
  - name: (
  - uid: Agora.Core.Interfaces.Filters.ITransactionFilter
    name: ITransactionFilter
  - name: )
- uid: Agora.Core.Interfaces.Filters.ITransactionFilter
  commentId: T:Agora.Core.Interfaces.Filters.ITransactionFilter
  parent: Agora.Core.Interfaces.Filters
  href: Agora.Core.Interfaces.Filters.ITransactionFilter.html
  name: ITransactionFilter
  nameWithType: ITransactionFilter
  fullName: Agora.Core.Interfaces.Filters.ITransactionFilter
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{Agora.Core.Models.Transaction}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{Agora.Core.Models.Transaction}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IReadOnlyList<Transaction>>
  nameWithType: Task<IReadOnlyList<Transaction>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Agora.Core.Models.Transaction>>
  nameWithType.vb: Task(Of IReadOnlyList(Of Transaction))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IReadOnlyList(Of Agora.Core.Models.Transaction))
  name.vb: Task(Of IReadOnlyList(Of Transaction))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Agora.Core.Models.Transaction
    name: Transaction
    href: Agora.Core.Models.Transaction.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Agora.Core.Models.Transaction
    name: Transaction
    href: Agora.Core.Models.Transaction.html
  - name: )
  - name: )
- uid: Agora.Core.Interfaces.Filters
  commentId: N:Agora.Core.Interfaces.Filters
  href: Agora.html
  name: Agora.Core.Interfaces.Filters
  nameWithType: Agora.Core.Interfaces.Filters
  fullName: Agora.Core.Interfaces.Filters
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Interfaces
    name: Interfaces
    href: Agora.Core.Interfaces.html
  - name: .
  - uid: Agora.Core.Interfaces.Filters
    name: Filters
    href: Agora.Core.Interfaces.Filters.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Interfaces
    name: Interfaces
    href: Agora.Core.Interfaces.html
  - name: .
  - uid: Agora.Core.Interfaces.Filters
    name: Filters
    href: Agora.Core.Interfaces.Filters.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Agora.Infrastructure.Repositories.TransactionRepository.GetTransactionByIdAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.TransactionRepository.GetTransactionByIdAsync
  href: Agora.Infrastructure.Repositories.TransactionRepository.html#Agora_Infrastructure_Repositories_TransactionRepository_GetTransactionByIdAsync_System_Int64_
  name: GetTransactionByIdAsync
  nameWithType: TransactionRepository.GetTransactionByIdAsync
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.GetTransactionByIdAsync
- uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.GetTransactionByIdAsync(System.Int64)
  commentId: M:Agora.Core.Interfaces.Repositories.ITransactionRepository.GetTransactionByIdAsync(System.Int64)
  parent: Agora.Core.Interfaces.Repositories.ITransactionRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: GetTransactionByIdAsync(long)
  nameWithType: ITransactionRepository.GetTransactionByIdAsync(long)
  fullName: Agora.Core.Interfaces.Repositories.ITransactionRepository.GetTransactionByIdAsync(long)
  nameWithType.vb: ITransactionRepository.GetTransactionByIdAsync(Long)
  fullName.vb: Agora.Core.Interfaces.Repositories.ITransactionRepository.GetTransactionByIdAsync(Long)
  name.vb: GetTransactionByIdAsync(Long)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.GetTransactionByIdAsync(System.Int64)
    name: GetTransactionByIdAsync
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.GetTransactionByIdAsync(System.Int64)
    name: GetTransactionByIdAsync
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Threading.Tasks.Task{Agora.Core.Models.Transaction}
  commentId: T:System.Threading.Tasks.Task{Agora.Core.Models.Transaction}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<Transaction>
  nameWithType: Task<Transaction>
  fullName: System.Threading.Tasks.Task<Agora.Core.Models.Transaction>
  nameWithType.vb: Task(Of Transaction)
  fullName.vb: System.Threading.Tasks.Task(Of Agora.Core.Models.Transaction)
  name.vb: Task(Of Transaction)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Agora.Core.Models.Transaction
    name: Transaction
    href: Agora.Core.Models.Transaction.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Agora.Core.Models.Transaction
    name: Transaction
    href: Agora.Core.Models.Transaction.html
  - name: )
- uid: Agora.Infrastructure.Repositories.TransactionRepository.AddTransaction*
  commentId: Overload:Agora.Infrastructure.Repositories.TransactionRepository.AddTransaction
  href: Agora.Infrastructure.Repositories.TransactionRepository.html#Agora_Infrastructure_Repositories_TransactionRepository_AddTransaction_Agora_Core_Models_Transaction_
  name: AddTransaction
  nameWithType: TransactionRepository.AddTransaction
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.AddTransaction
- uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
  commentId: M:Agora.Core.Interfaces.Repositories.ITransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
  parent: Agora.Core.Interfaces.Repositories.ITransactionRepository
  name: AddTransaction(Transaction)
  nameWithType: ITransactionRepository.AddTransaction(Transaction)
  fullName: Agora.Core.Interfaces.Repositories.ITransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
    name: AddTransaction
  - name: (
  - uid: Agora.Core.Models.Transaction
    name: Transaction
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.AddTransaction(Agora.Core.Models.Transaction)
    name: AddTransaction
  - name: (
  - uid: Agora.Core.Models.Transaction
    name: Transaction
  - name: )
- uid: Agora.Core.Models.Transaction
  commentId: T:Agora.Core.Models.Transaction
  parent: Agora.Core.Models
  href: Agora.Core.Models.Transaction.html
  name: Transaction
  nameWithType: Transaction
  fullName: Agora.Core.Models.Transaction
- uid: Agora.Core.Models
  commentId: N:Agora.Core.Models
  href: Agora.html
  name: Agora.Core.Models
  nameWithType: Agora.Core.Models
  fullName: Agora.Core.Models
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Models
    name: Models
    href: Agora.Core.Models.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Models
    name: Models
    href: Agora.Core.Models.html
- uid: Agora.Infrastructure.Repositories.TransactionRepository.DeleteTransaction*
  commentId: Overload:Agora.Infrastructure.Repositories.TransactionRepository.DeleteTransaction
  href: Agora.Infrastructure.Repositories.TransactionRepository.html#Agora_Infrastructure_Repositories_TransactionRepository_DeleteTransaction_Agora_Core_Models_Transaction_
  name: DeleteTransaction
  nameWithType: TransactionRepository.DeleteTransaction
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.DeleteTransaction
- uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
  commentId: M:Agora.Core.Interfaces.Repositories.ITransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
  parent: Agora.Core.Interfaces.Repositories.ITransactionRepository
  name: DeleteTransaction(Transaction)
  nameWithType: ITransactionRepository.DeleteTransaction(Transaction)
  fullName: Agora.Core.Interfaces.Repositories.ITransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
    name: DeleteTransaction
  - name: (
  - uid: Agora.Core.Models.Transaction
    name: Transaction
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.DeleteTransaction(Agora.Core.Models.Transaction)
    name: DeleteTransaction
  - name: (
  - uid: Agora.Core.Models.Transaction
    name: Transaction
  - name: )
- uid: Agora.Infrastructure.Repositories.TransactionRepository.SaveChangesAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.TransactionRepository.SaveChangesAsync
  href: Agora.Infrastructure.Repositories.TransactionRepository.html#Agora_Infrastructure_Repositories_TransactionRepository_SaveChangesAsync
  name: SaveChangesAsync
  nameWithType: TransactionRepository.SaveChangesAsync
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.SaveChangesAsync
- uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.SaveChangesAsync
  commentId: M:Agora.Core.Interfaces.Repositories.ITransactionRepository.SaveChangesAsync
  parent: Agora.Core.Interfaces.Repositories.ITransactionRepository
  name: SaveChangesAsync()
  nameWithType: ITransactionRepository.SaveChangesAsync()
  fullName: Agora.Core.Interfaces.Repositories.ITransactionRepository.SaveChangesAsync()
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.SaveChangesAsync
    name: SaveChangesAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.SaveChangesAsync
    name: SaveChangesAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Agora.Infrastructure.Repositories.TransactionRepository.ApplySorting*
  commentId: Overload:Agora.Infrastructure.Repositories.TransactionRepository.ApplySorting
  href: Agora.Infrastructure.Repositories.TransactionRepository.html#Agora_Infrastructure_Repositories_TransactionRepository_ApplySorting_System_Linq_IQueryable_Agora_Core_Models_Transaction__Agora_Core_Interfaces_Filters_ITransactionFilter_
  name: ApplySorting
  nameWithType: TransactionRepository.ApplySorting
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.ApplySorting
- uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.Transaction},Agora.Core.Interfaces.Filters.ITransactionFilter)
  commentId: M:Agora.Core.Interfaces.Repositories.ITransactionRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.Transaction},Agora.Core.Interfaces.Filters.ITransactionFilter)
  parent: Agora.Core.Interfaces.Repositories.ITransactionRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: ApplySorting(IQueryable<Transaction>, ITransactionFilter)
  nameWithType: ITransactionRepository.ApplySorting(IQueryable<Transaction>, ITransactionFilter)
  fullName: Agora.Core.Interfaces.Repositories.ITransactionRepository.ApplySorting(System.Linq.IQueryable<Agora.Core.Models.Transaction>, Agora.Core.Interfaces.Filters.ITransactionFilter)
  nameWithType.vb: ITransactionRepository.ApplySorting(IQueryable(Of Transaction), ITransactionFilter)
  fullName.vb: Agora.Core.Interfaces.Repositories.ITransactionRepository.ApplySorting(System.Linq.IQueryable(Of Agora.Core.Models.Transaction), Agora.Core.Interfaces.Filters.ITransactionFilter)
  name.vb: ApplySorting(IQueryable(Of Transaction), ITransactionFilter)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.Transaction},Agora.Core.Interfaces.Filters.ITransactionFilter)
    name: ApplySorting
  - name: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - uid: Agora.Core.Models.Transaction
    name: Transaction
  - name: '>'
  - name: ','
  - name: " "
  - uid: Agora.Core.Interfaces.Filters.ITransactionFilter
    name: ITransactionFilter
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.Transaction},Agora.Core.Interfaces.Filters.ITransactionFilter)
    name: ApplySorting
  - name: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Agora.Core.Models.Transaction
    name: Transaction
  - name: )
  - name: ','
  - name: " "
  - uid: Agora.Core.Interfaces.Filters.ITransactionFilter
    name: ITransactionFilter
  - name: )
- uid: System.Linq.IQueryable{Agora.Core.Models.Transaction}
  commentId: T:System.Linq.IQueryable{Agora.Core.Models.Transaction}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<Transaction>
  nameWithType: IQueryable<Transaction>
  fullName: System.Linq.IQueryable<Agora.Core.Models.Transaction>
  nameWithType.vb: IQueryable(Of Transaction)
  fullName.vb: System.Linq.IQueryable(Of Agora.Core.Models.Transaction)
  name.vb: IQueryable(Of Transaction)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - uid: Agora.Core.Models.Transaction
    name: Transaction
    href: Agora.Core.Models.Transaction.html
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Agora.Core.Models.Transaction
    name: Transaction
    href: Agora.Core.Models.Transaction.html
  - name: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
- uid: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInTransactionAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.TransactionRepository.IsPostInTransactionAsync
  href: Agora.Infrastructure.Repositories.TransactionRepository.html#Agora_Infrastructure_Repositories_TransactionRepository_IsPostInTransactionAsync_System_Int64_
  name: IsPostInTransactionAsync
  nameWithType: TransactionRepository.IsPostInTransactionAsync
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInTransactionAsync
- uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInTransactionAsync(System.Int64)
  commentId: M:Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInTransactionAsync(System.Int64)
  parent: Agora.Core.Interfaces.Repositories.ITransactionRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: IsPostInTransactionAsync(long)
  nameWithType: ITransactionRepository.IsPostInTransactionAsync(long)
  fullName: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInTransactionAsync(long)
  nameWithType.vb: ITransactionRepository.IsPostInTransactionAsync(Long)
  fullName.vb: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInTransactionAsync(Long)
  name.vb: IsPostInTransactionAsync(Long)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInTransactionAsync(System.Int64)
    name: IsPostInTransactionAsync
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInTransactionAsync(System.Int64)
    name: IsPostInTransactionAsync
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInOnGoingTransactionAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.TransactionRepository.IsPostInOnGoingTransactionAsync
  href: Agora.Infrastructure.Repositories.TransactionRepository.html#Agora_Infrastructure_Repositories_TransactionRepository_IsPostInOnGoingTransactionAsync_System_Int64_
  name: IsPostInOnGoingTransactionAsync
  nameWithType: TransactionRepository.IsPostInOnGoingTransactionAsync
  fullName: Agora.Infrastructure.Repositories.TransactionRepository.IsPostInOnGoingTransactionAsync
- uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInOnGoingTransactionAsync(System.Int64)
  commentId: M:Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInOnGoingTransactionAsync(System.Int64)
  parent: Agora.Core.Interfaces.Repositories.ITransactionRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: IsPostInOnGoingTransactionAsync(long)
  nameWithType: ITransactionRepository.IsPostInOnGoingTransactionAsync(long)
  fullName: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInOnGoingTransactionAsync(long)
  nameWithType.vb: ITransactionRepository.IsPostInOnGoingTransactionAsync(Long)
  fullName.vb: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInOnGoingTransactionAsync(Long)
  name.vb: IsPostInOnGoingTransactionAsync(Long)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInOnGoingTransactionAsync(System.Int64)
    name: IsPostInOnGoingTransactionAsync
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.ITransactionRepository.IsPostInOnGoingTransactionAsync(System.Int64)
    name: IsPostInOnGoingTransactionAsync
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
