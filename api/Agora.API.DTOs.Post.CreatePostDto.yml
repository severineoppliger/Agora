### YamlMime:ManagedReference
items:
- uid: Agora.API.DTOs.Post.CreatePostDto
  commentId: T:Agora.API.DTOs.Post.CreatePostDto
  id: CreatePostDto
  parent: Agora.API.DTOs.Post
  children:
  - Agora.API.DTOs.Post.CreatePostDto.Description
  - Agora.API.DTOs.Post.CreatePostDto.PostCategoryId
  - Agora.API.DTOs.Post.CreatePostDto.Price
  - Agora.API.DTOs.Post.CreatePostDto.Title
  - Agora.API.DTOs.Post.CreatePostDto.Type
  langs:
  - csharp
  - vb
  name: CreatePostDto
  nameWithType: CreatePostDto
  fullName: Agora.API.DTOs.Post.CreatePostDto
  type: Class
  source:
    remote:
      path: Agora.API/DTOs/Post/CreatePostDto.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: CreatePostDto
    path: Agora.API/DTOs/Post/CreatePostDto.cs
    startLine: 5
  assemblies:
  - Agora.API
  namespace: Agora.API.DTOs.Post
  syntax:
    content: public class CreatePostDto
    content.vb: Public Class CreatePostDto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Agora.API.DTOs.Post.CreatePostDto.Title
  commentId: P:Agora.API.DTOs.Post.CreatePostDto.Title
  id: Title
  parent: Agora.API.DTOs.Post.CreatePostDto
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: CreatePostDto.Title
  fullName: Agora.API.DTOs.Post.CreatePostDto.Title
  type: Property
  source:
    remote:
      path: Agora.API/DTOs/Post/CreatePostDto.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: Title
    path: Agora.API/DTOs/Post/CreatePostDto.cs
    startLine: 7
  assemblies:
  - Agora.API
  namespace: Agora.API.DTOs.Post
  syntax:
    content: >-
      [Required]

      [NotEmptyOrWhitespace]

      [MinLength(3, ErrorMessage = "{0} must be at least {1} characters.")]

      [MaxLength(100, ErrorMessage = "{0} must be less than {1} characters.")]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <NotEmptyOrWhitespace>

      <MinLength(3, ErrorMessage:="{0} must be at least {1} characters.")>

      <MaxLength(100, ErrorMessage:="{0} must be less than {1} characters.")>

      Public Property Title As String
  overload: Agora.API.DTOs.Post.CreatePostDto.Title*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: Agora.Core.Validation.NotEmptyOrWhitespaceAttribute
    ctor: Agora.Core.Validation.NotEmptyOrWhitespaceAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 3
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: '{0} must be at least {1} characters.'
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: '{0} must be less than {1} characters.'
- uid: Agora.API.DTOs.Post.CreatePostDto.Description
  commentId: P:Agora.API.DTOs.Post.CreatePostDto.Description
  id: Description
  parent: Agora.API.DTOs.Post.CreatePostDto
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: CreatePostDto.Description
  fullName: Agora.API.DTOs.Post.CreatePostDto.Description
  type: Property
  source:
    remote:
      path: Agora.API/DTOs/Post/CreatePostDto.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: Description
    path: Agora.API/DTOs/Post/CreatePostDto.cs
    startLine: 13
  assemblies:
  - Agora.API
  namespace: Agora.API.DTOs.Post
  syntax:
    content: >-
      [Required]

      [NotEmptyOrWhitespace]

      [MinLength(5, ErrorMessage = "{0} must be at least {1} characters.")]

      [MaxLength(2000, ErrorMessage = "{0} must be less than {1} characters.")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <NotEmptyOrWhitespace>

      <MinLength(5, ErrorMessage:="{0} must be at least {1} characters.")>

      <MaxLength(2000, ErrorMessage:="{0} must be less than {1} characters.")>

      Public Property Description As String
  overload: Agora.API.DTOs.Post.CreatePostDto.Description*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: Agora.Core.Validation.NotEmptyOrWhitespaceAttribute
    ctor: Agora.Core.Validation.NotEmptyOrWhitespaceAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MinLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MinLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 5
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: '{0} must be at least {1} characters.'
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 2000
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: '{0} must be less than {1} characters.'
- uid: Agora.API.DTOs.Post.CreatePostDto.Price
  commentId: P:Agora.API.DTOs.Post.CreatePostDto.Price
  id: Price
  parent: Agora.API.DTOs.Post.CreatePostDto
  langs:
  - csharp
  - vb
  name: Price
  nameWithType: CreatePostDto.Price
  fullName: Agora.API.DTOs.Post.CreatePostDto.Price
  type: Property
  source:
    remote:
      path: Agora.API/DTOs/Post/CreatePostDto.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: Price
    path: Agora.API/DTOs/Post/CreatePostDto.cs
    startLine: 19
  assemblies:
  - Agora.API
  namespace: Agora.API.DTOs.Post
  syntax:
    content: >-
      [Required]

      [Range(0, 100000, ErrorMessage = "{0} must be between {1} and {2}.")]

      public int Price { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <Required>

      <Range(0, 100000, ErrorMessage:="{0} must be between {1} and {2}.")>

      Public Property Price As Integer
  overload: Agora.API.DTOs.Post.CreatePostDto.Price*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.RangeAttribute
    ctor: System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)
    arguments:
    - type: System.Int32
      value: 0
    - type: System.Int32
      value: 100000
    namedArguments:
    - name: ErrorMessage
      type: System.String
      value: '{0} must be between {1} and {2}.'
- uid: Agora.API.DTOs.Post.CreatePostDto.Type
  commentId: P:Agora.API.DTOs.Post.CreatePostDto.Type
  id: Type
  parent: Agora.API.DTOs.Post.CreatePostDto
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: CreatePostDto.Type
  fullName: Agora.API.DTOs.Post.CreatePostDto.Type
  type: Property
  source:
    remote:
      path: Agora.API/DTOs/Post/CreatePostDto.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: Type
    path: Agora.API/DTOs/Post/CreatePostDto.cs
    startLine: 23
  assemblies:
  - Agora.API
  namespace: Agora.API.DTOs.Post
  syntax:
    content: >-
      [Required]

      public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Type As String
  overload: Agora.API.DTOs.Post.CreatePostDto.Type*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
- uid: Agora.API.DTOs.Post.CreatePostDto.PostCategoryId
  commentId: P:Agora.API.DTOs.Post.CreatePostDto.PostCategoryId
  id: PostCategoryId
  parent: Agora.API.DTOs.Post.CreatePostDto
  langs:
  - csharp
  - vb
  name: PostCategoryId
  nameWithType: CreatePostDto.PostCategoryId
  fullName: Agora.API.DTOs.Post.CreatePostDto.PostCategoryId
  type: Property
  source:
    remote:
      path: Agora.API/DTOs/Post/CreatePostDto.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: PostCategoryId
    path: Agora.API/DTOs/Post/CreatePostDto.cs
    startLine: 26
  assemblies:
  - Agora.API
  namespace: Agora.API.DTOs.Post
  syntax:
    content: >-
      [Required]

      public long PostCategoryId { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <Required>

      Public Property PostCategoryId As Long
  overload: Agora.API.DTOs.Post.CreatePostDto.PostCategoryId*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
references:
- uid: Agora.API.DTOs.Post
  commentId: N:Agora.API.DTOs.Post
  href: Agora.html
  name: Agora.API.DTOs.Post
  nameWithType: Agora.API.DTOs.Post
  fullName: Agora.API.DTOs.Post
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.API
    name: API
    href: Agora.API.html
  - name: .
  - uid: Agora.API.DTOs
    name: DTOs
    href: Agora.API.DTOs.html
  - name: .
  - uid: Agora.API.DTOs.Post
    name: Post
    href: Agora.API.DTOs.Post.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.API
    name: API
    href: Agora.API.html
  - name: .
  - uid: Agora.API.DTOs
    name: DTOs
    href: Agora.API.DTOs.html
  - name: .
  - uid: Agora.API.DTOs.Post
    name: Post
    href: Agora.API.DTOs.Post.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Agora.API.DTOs.Post.CreatePostDto.Title*
  commentId: Overload:Agora.API.DTOs.Post.CreatePostDto.Title
  href: Agora.API.DTOs.Post.CreatePostDto.html#Agora_API_DTOs_Post_CreatePostDto_Title
  name: Title
  nameWithType: CreatePostDto.Title
  fullName: Agora.API.DTOs.Post.CreatePostDto.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Agora.API.DTOs.Post.CreatePostDto.Description*
  commentId: Overload:Agora.API.DTOs.Post.CreatePostDto.Description
  href: Agora.API.DTOs.Post.CreatePostDto.html#Agora_API_DTOs_Post_CreatePostDto_Description
  name: Description
  nameWithType: CreatePostDto.Description
  fullName: Agora.API.DTOs.Post.CreatePostDto.Description
- uid: Agora.API.DTOs.Post.CreatePostDto.Price*
  commentId: Overload:Agora.API.DTOs.Post.CreatePostDto.Price
  href: Agora.API.DTOs.Post.CreatePostDto.html#Agora_API_DTOs_Post_CreatePostDto_Price
  name: Price
  nameWithType: CreatePostDto.Price
  fullName: Agora.API.DTOs.Post.CreatePostDto.Price
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Agora.API.DTOs.Post.CreatePostDto.Type*
  commentId: Overload:Agora.API.DTOs.Post.CreatePostDto.Type
  href: Agora.API.DTOs.Post.CreatePostDto.html#Agora_API_DTOs_Post_CreatePostDto_Type
  name: Type
  nameWithType: CreatePostDto.Type
  fullName: Agora.API.DTOs.Post.CreatePostDto.Type
- uid: Agora.API.DTOs.Post.CreatePostDto.PostCategoryId*
  commentId: Overload:Agora.API.DTOs.Post.CreatePostDto.PostCategoryId
  href: Agora.API.DTOs.Post.CreatePostDto.html#Agora_API_DTOs_Post_CreatePostDto_PostCategoryId
  name: PostCategoryId
  nameWithType: CreatePostDto.PostCategoryId
  fullName: Agora.API.DTOs.Post.CreatePostDto.PostCategoryId
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
