### YamlMime:ManagedReference
items:
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository
  commentId: T:Agora.Infrastructure.Repositories.PostCategoryRepository
  id: PostCategoryRepository
  parent: Agora.Infrastructure.Repositories
  children:
  - Agora.Infrastructure.Repositories.PostCategoryRepository.#ctor(Agora.Infrastructure.Data.AgoraDbContext)
  - Agora.Infrastructure.Repositories.PostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
  - Agora.Infrastructure.Repositories.PostCategoryRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.PostCategory},Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  - Agora.Infrastructure.Repositories.PostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
  - Agora.Infrastructure.Repositories.PostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  - Agora.Infrastructure.Repositories.PostCategoryRepository.GetPostCategoryByIdAsync(System.Int64)
  - Agora.Infrastructure.Repositories.PostCategoryRepository.NameExistsAsync(System.String)
  - Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryExistsAsync(System.Int64)
  - Agora.Infrastructure.Repositories.PostCategoryRepository.SaveChangesAsync
  langs:
  - csharp
  - vb
  name: PostCategoryRepository
  nameWithType: PostCategoryRepository
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository
  type: Class
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: PostCategoryRepository
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 8
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  syntax:
    content: 'public class PostCategoryRepository : IPostCategoryRepository'
    content.vb: Public Class PostCategoryRepository Implements IPostCategoryRepository
  inheritance:
  - System.Object
  implements:
  - Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.#ctor(Agora.Infrastructure.Data.AgoraDbContext)
  commentId: M:Agora.Infrastructure.Repositories.PostCategoryRepository.#ctor(Agora.Infrastructure.Data.AgoraDbContext)
  id: '#ctor(Agora.Infrastructure.Data.AgoraDbContext)'
  parent: Agora.Infrastructure.Repositories.PostCategoryRepository
  langs:
  - csharp
  - vb
  name: PostCategoryRepository(AgoraDbContext)
  nameWithType: PostCategoryRepository.PostCategoryRepository(AgoraDbContext)
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryRepository(Agora.Infrastructure.Data.AgoraDbContext)
  type: Constructor
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: .ctor
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 8
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  syntax:
    content: public PostCategoryRepository(AgoraDbContext context)
    parameters:
    - id: context
      type: Agora.Infrastructure.Data.AgoraDbContext
    content.vb: Public Sub New(context As AgoraDbContext)
  overload: Agora.Infrastructure.Repositories.PostCategoryRepository.#ctor*
  nameWithType.vb: PostCategoryRepository.New(AgoraDbContext)
  fullName.vb: Agora.Infrastructure.Repositories.PostCategoryRepository.New(Agora.Infrastructure.Data.AgoraDbContext)
  name.vb: New(AgoraDbContext)
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  commentId: M:Agora.Infrastructure.Repositories.PostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  id: GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  parent: Agora.Infrastructure.Repositories.PostCategoryRepository
  langs:
  - csharp
  - vb
  name: GetAllPostCategoriesAsync(IPostCategoryFilter)
  nameWithType: PostCategoryRepository.GetAllPostCategoriesAsync(IPostCategoryFilter)
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: GetAllPostCategoriesAsync
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 10
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<IReadOnlyList<PostCategory>> GetAllPostCategoriesAsync(IPostCategoryFilter filter)
    parameters:
    - id: filter
      type: Agora.Core.Interfaces.Filters.IPostCategoryFilter
    return:
      type: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{Agora.Core.Models.PostCategory}}
    content.vb: Public Function GetAllPostCategoriesAsync(filter As IPostCategoryFilter) As Task(Of IReadOnlyList(Of PostCategory))
  overload: Agora.Infrastructure.Repositories.PostCategoryRepository.GetAllPostCategoriesAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.GetPostCategoryByIdAsync(System.Int64)
  commentId: M:Agora.Infrastructure.Repositories.PostCategoryRepository.GetPostCategoryByIdAsync(System.Int64)
  id: GetPostCategoryByIdAsync(System.Int64)
  parent: Agora.Infrastructure.Repositories.PostCategoryRepository
  langs:
  - csharp
  - vb
  name: GetPostCategoryByIdAsync(long)
  nameWithType: PostCategoryRepository.GetPostCategoryByIdAsync(long)
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.GetPostCategoryByIdAsync(long)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: GetPostCategoryByIdAsync
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 24
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<PostCategory?> GetPostCategoryByIdAsync(long id)
    parameters:
    - id: id
      type: System.Int64
    return:
      type: System.Threading.Tasks.Task{Agora.Core.Models.PostCategory}
    content.vb: Public Function GetPostCategoryByIdAsync(id As Long) As Task(Of PostCategory)
  overload: Agora.Infrastructure.Repositories.PostCategoryRepository.GetPostCategoryByIdAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetPostCategoryByIdAsync(System.Int64)
  nameWithType.vb: PostCategoryRepository.GetPostCategoryByIdAsync(Long)
  fullName.vb: Agora.Infrastructure.Repositories.PostCategoryRepository.GetPostCategoryByIdAsync(Long)
  name.vb: GetPostCategoryByIdAsync(Long)
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
  commentId: M:Agora.Infrastructure.Repositories.PostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
  id: AddPostCategory(Agora.Core.Models.PostCategory)
  parent: Agora.Infrastructure.Repositories.PostCategoryRepository
  langs:
  - csharp
  - vb
  name: AddPostCategory(PostCategory)
  nameWithType: PostCategoryRepository.AddPostCategory(PostCategory)
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: AddPostCategory
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 32
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public void AddPostCategory(PostCategory postCategory)
    parameters:
    - id: postCategory
      type: Agora.Core.Models.PostCategory
    content.vb: Public Sub AddPostCategory(postCategory As PostCategory)
  overload: Agora.Infrastructure.Repositories.PostCategoryRepository.AddPostCategory*
  implements:
  - Agora.Core.Interfaces.Repositories.IPostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
  commentId: M:Agora.Infrastructure.Repositories.PostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
  id: DeletePostCategory(Agora.Core.Models.PostCategory)
  parent: Agora.Infrastructure.Repositories.PostCategoryRepository
  langs:
  - csharp
  - vb
  name: DeletePostCategory(PostCategory)
  nameWithType: PostCategoryRepository.DeletePostCategory(PostCategory)
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: DeletePostCategory
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 37
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public void DeletePostCategory(PostCategory postCategory)
    parameters:
    - id: postCategory
      type: Agora.Core.Models.PostCategory
    content.vb: Public Sub DeletePostCategory(postCategory As PostCategory)
  overload: Agora.Infrastructure.Repositories.PostCategoryRepository.DeletePostCategory*
  implements:
  - Agora.Core.Interfaces.Repositories.IPostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.SaveChangesAsync
  commentId: M:Agora.Infrastructure.Repositories.PostCategoryRepository.SaveChangesAsync
  id: SaveChangesAsync
  parent: Agora.Infrastructure.Repositories.PostCategoryRepository
  langs:
  - csharp
  - vb
  name: SaveChangesAsync()
  nameWithType: PostCategoryRepository.SaveChangesAsync()
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.SaveChangesAsync()
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: SaveChangesAsync
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 42
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<bool> SaveChangesAsync()
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function SaveChangesAsync() As Task(Of Boolean)
  overload: Agora.Infrastructure.Repositories.PostCategoryRepository.SaveChangesAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.IPostCategoryRepository.SaveChangesAsync
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryExistsAsync(System.Int64)
  commentId: M:Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryExistsAsync(System.Int64)
  id: PostCategoryExistsAsync(System.Int64)
  parent: Agora.Infrastructure.Repositories.PostCategoryRepository
  langs:
  - csharp
  - vb
  name: PostCategoryExistsAsync(long)
  nameWithType: PostCategoryRepository.PostCategoryExistsAsync(long)
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryExistsAsync(long)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: PostCategoryExistsAsync
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 47
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<bool> PostCategoryExistsAsync(long id)
    parameters:
    - id: id
      type: System.Int64
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function PostCategoryExistsAsync(id As Long) As Task(Of Boolean)
  overload: Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryExistsAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.IPostCategoryRepository.PostCategoryExistsAsync(System.Int64)
  nameWithType.vb: PostCategoryRepository.PostCategoryExistsAsync(Long)
  fullName.vb: Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryExistsAsync(Long)
  name.vb: PostCategoryExistsAsync(Long)
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.NameExistsAsync(System.String)
  commentId: M:Agora.Infrastructure.Repositories.PostCategoryRepository.NameExistsAsync(System.String)
  id: NameExistsAsync(System.String)
  parent: Agora.Infrastructure.Repositories.PostCategoryRepository
  langs:
  - csharp
  - vb
  name: NameExistsAsync(string)
  nameWithType: PostCategoryRepository.NameExistsAsync(string)
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.NameExistsAsync(string)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: NameExistsAsync
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 52
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public Task<bool> NameExistsAsync(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Threading.Tasks.Task{System.Boolean}
    content.vb: Public Function NameExistsAsync(name As String) As Task(Of Boolean)
  overload: Agora.Infrastructure.Repositories.PostCategoryRepository.NameExistsAsync*
  implements:
  - Agora.Core.Interfaces.Repositories.IPostCategoryRepository.NameExistsAsync(System.String)
  nameWithType.vb: PostCategoryRepository.NameExistsAsync(String)
  fullName.vb: Agora.Infrastructure.Repositories.PostCategoryRepository.NameExistsAsync(String)
  name.vb: NameExistsAsync(String)
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.PostCategory},Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  commentId: M:Agora.Infrastructure.Repositories.PostCategoryRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.PostCategory},Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  id: ApplySorting(System.Linq.IQueryable{Agora.Core.Models.PostCategory},Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  parent: Agora.Infrastructure.Repositories.PostCategoryRepository
  langs:
  - csharp
  - vb
  name: ApplySorting(IQueryable<PostCategory>, IPostCategoryFilter)
  nameWithType: PostCategoryRepository.ApplySorting(IQueryable<PostCategory>, IPostCategoryFilter)
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.ApplySorting(System.Linq.IQueryable<Agora.Core.Models.PostCategory>, Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  type: Method
  source:
    remote:
      path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
      branch: 15-Transition-status-logic
      repo: https://severineoppliger@dev.azure.com/severineoppliger/Agora/_git/Agora
    id: ApplySorting
    path: Agora.Infrastructure/Repositories/PostCategoryRepository.cs
    startLine: 57
  assemblies:
  - Agora.Infrastructure
  namespace: Agora.Infrastructure.Repositories
  example: []
  syntax:
    content: public IQueryable<PostCategory> ApplySorting(IQueryable<PostCategory> query, IPostCategoryFilter queryParams)
    parameters:
    - id: query
      type: System.Linq.IQueryable{Agora.Core.Models.PostCategory}
    - id: queryParams
      type: Agora.Core.Interfaces.Filters.IPostCategoryFilter
    return:
      type: System.Linq.IQueryable{Agora.Core.Models.PostCategory}
    content.vb: Public Function ApplySorting(query As IQueryable(Of PostCategory), queryParams As IPostCategoryFilter) As IQueryable(Of PostCategory)
  overload: Agora.Infrastructure.Repositories.PostCategoryRepository.ApplySorting*
  implements:
  - Agora.Core.Interfaces.Repositories.IPostCategoryRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.PostCategory},Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  nameWithType.vb: PostCategoryRepository.ApplySorting(IQueryable(Of PostCategory), IPostCategoryFilter)
  fullName.vb: Agora.Infrastructure.Repositories.PostCategoryRepository.ApplySorting(System.Linq.IQueryable(Of Agora.Core.Models.PostCategory), Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  name.vb: ApplySorting(IQueryable(Of PostCategory), IPostCategoryFilter)
references:
- uid: Agora.Infrastructure.Repositories
  commentId: N:Agora.Infrastructure.Repositories
  href: Agora.html
  name: Agora.Infrastructure.Repositories
  nameWithType: Agora.Infrastructure.Repositories
  fullName: Agora.Infrastructure.Repositories
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Infrastructure
    name: Infrastructure
    href: Agora.Infrastructure.html
  - name: .
  - uid: Agora.Infrastructure.Repositories
    name: Repositories
    href: Agora.Infrastructure.Repositories.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Infrastructure
    name: Infrastructure
    href: Agora.Infrastructure.html
  - name: .
  - uid: Agora.Infrastructure.Repositories
    name: Repositories
    href: Agora.Infrastructure.Repositories.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  commentId: T:Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  parent: Agora.Core.Interfaces.Repositories
  href: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.html
  name: IPostCategoryRepository
  nameWithType: IPostCategoryRepository
  fullName: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Agora.Core.Interfaces.Repositories
  commentId: N:Agora.Core.Interfaces.Repositories
  href: Agora.html
  name: Agora.Core.Interfaces.Repositories
  nameWithType: Agora.Core.Interfaces.Repositories
  fullName: Agora.Core.Interfaces.Repositories
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Interfaces
    name: Interfaces
    href: Agora.Core.Interfaces.html
  - name: .
  - uid: Agora.Core.Interfaces.Repositories
    name: Repositories
    href: Agora.Core.Interfaces.Repositories.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Interfaces
    name: Interfaces
    href: Agora.Core.Interfaces.html
  - name: .
  - uid: Agora.Core.Interfaces.Repositories
    name: Repositories
    href: Agora.Core.Interfaces.Repositories.html
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.#ctor*
  commentId: Overload:Agora.Infrastructure.Repositories.PostCategoryRepository.#ctor
  href: Agora.Infrastructure.Repositories.PostCategoryRepository.html#Agora_Infrastructure_Repositories_PostCategoryRepository__ctor_Agora_Infrastructure_Data_AgoraDbContext_
  name: PostCategoryRepository
  nameWithType: PostCategoryRepository.PostCategoryRepository
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryRepository
  nameWithType.vb: PostCategoryRepository.New
  fullName.vb: Agora.Infrastructure.Repositories.PostCategoryRepository.New
  name.vb: New
- uid: Agora.Infrastructure.Data.AgoraDbContext
  commentId: T:Agora.Infrastructure.Data.AgoraDbContext
  parent: Agora.Infrastructure.Data
  href: Agora.Infrastructure.Data.AgoraDbContext.html
  name: AgoraDbContext
  nameWithType: AgoraDbContext
  fullName: Agora.Infrastructure.Data.AgoraDbContext
- uid: Agora.Infrastructure.Data
  commentId: N:Agora.Infrastructure.Data
  href: Agora.html
  name: Agora.Infrastructure.Data
  nameWithType: Agora.Infrastructure.Data
  fullName: Agora.Infrastructure.Data
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Infrastructure
    name: Infrastructure
    href: Agora.Infrastructure.html
  - name: .
  - uid: Agora.Infrastructure.Data
    name: Data
    href: Agora.Infrastructure.Data.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Infrastructure
    name: Infrastructure
    href: Agora.Infrastructure.html
  - name: .
  - uid: Agora.Infrastructure.Data
    name: Data
    href: Agora.Infrastructure.Data.html
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.GetAllPostCategoriesAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.PostCategoryRepository.GetAllPostCategoriesAsync
  href: Agora.Infrastructure.Repositories.PostCategoryRepository.html#Agora_Infrastructure_Repositories_PostCategoryRepository_GetAllPostCategoriesAsync_Agora_Core_Interfaces_Filters_IPostCategoryFilter_
  name: GetAllPostCategoriesAsync
  nameWithType: PostCategoryRepository.GetAllPostCategoriesAsync
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.GetAllPostCategoriesAsync
- uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  commentId: M:Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  parent: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  name: GetAllPostCategoriesAsync(IPostCategoryFilter)
  nameWithType: IPostCategoryRepository.GetAllPostCategoriesAsync(IPostCategoryFilter)
  fullName: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
    name: GetAllPostCategoriesAsync
  - name: (
  - uid: Agora.Core.Interfaces.Filters.IPostCategoryFilter
    name: IPostCategoryFilter
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetAllPostCategoriesAsync(Agora.Core.Interfaces.Filters.IPostCategoryFilter)
    name: GetAllPostCategoriesAsync
  - name: (
  - uid: Agora.Core.Interfaces.Filters.IPostCategoryFilter
    name: IPostCategoryFilter
  - name: )
- uid: Agora.Core.Interfaces.Filters.IPostCategoryFilter
  commentId: T:Agora.Core.Interfaces.Filters.IPostCategoryFilter
  parent: Agora.Core.Interfaces.Filters
  href: Agora.Core.Interfaces.Filters.IPostCategoryFilter.html
  name: IPostCategoryFilter
  nameWithType: IPostCategoryFilter
  fullName: Agora.Core.Interfaces.Filters.IPostCategoryFilter
- uid: System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{Agora.Core.Models.PostCategory}}
  commentId: T:System.Threading.Tasks.Task{System.Collections.Generic.IReadOnlyList{Agora.Core.Models.PostCategory}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<IReadOnlyList<PostCategory>>
  nameWithType: Task<IReadOnlyList<PostCategory>>
  fullName: System.Threading.Tasks.Task<System.Collections.Generic.IReadOnlyList<Agora.Core.Models.PostCategory>>
  nameWithType.vb: Task(Of IReadOnlyList(Of PostCategory))
  fullName.vb: System.Threading.Tasks.Task(Of System.Collections.Generic.IReadOnlyList(Of Agora.Core.Models.PostCategory))
  name.vb: Task(Of IReadOnlyList(Of PostCategory))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: <
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
    href: Agora.Core.Models.PostCategory.html
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.IReadOnlyList`1
    name: IReadOnlyList
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlylist-1
  - name: (
  - name: Of
  - name: " "
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
    href: Agora.Core.Models.PostCategory.html
  - name: )
  - name: )
- uid: Agora.Core.Interfaces.Filters
  commentId: N:Agora.Core.Interfaces.Filters
  href: Agora.html
  name: Agora.Core.Interfaces.Filters
  nameWithType: Agora.Core.Interfaces.Filters
  fullName: Agora.Core.Interfaces.Filters
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Interfaces
    name: Interfaces
    href: Agora.Core.Interfaces.html
  - name: .
  - uid: Agora.Core.Interfaces.Filters
    name: Filters
    href: Agora.Core.Interfaces.Filters.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Interfaces
    name: Interfaces
    href: Agora.Core.Interfaces.html
  - name: .
  - uid: Agora.Core.Interfaces.Filters
    name: Filters
    href: Agora.Core.Interfaces.Filters.html
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.GetPostCategoryByIdAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.PostCategoryRepository.GetPostCategoryByIdAsync
  href: Agora.Infrastructure.Repositories.PostCategoryRepository.html#Agora_Infrastructure_Repositories_PostCategoryRepository_GetPostCategoryByIdAsync_System_Int64_
  name: GetPostCategoryByIdAsync
  nameWithType: PostCategoryRepository.GetPostCategoryByIdAsync
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.GetPostCategoryByIdAsync
- uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetPostCategoryByIdAsync(System.Int64)
  commentId: M:Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetPostCategoryByIdAsync(System.Int64)
  parent: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: GetPostCategoryByIdAsync(long)
  nameWithType: IPostCategoryRepository.GetPostCategoryByIdAsync(long)
  fullName: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetPostCategoryByIdAsync(long)
  nameWithType.vb: IPostCategoryRepository.GetPostCategoryByIdAsync(Long)
  fullName.vb: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetPostCategoryByIdAsync(Long)
  name.vb: GetPostCategoryByIdAsync(Long)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetPostCategoryByIdAsync(System.Int64)
    name: GetPostCategoryByIdAsync
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.GetPostCategoryByIdAsync(System.Int64)
    name: GetPostCategoryByIdAsync
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Threading.Tasks.Task{Agora.Core.Models.PostCategory}
  commentId: T:System.Threading.Tasks.Task{Agora.Core.Models.PostCategory}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<PostCategory>
  nameWithType: Task<PostCategory>
  fullName: System.Threading.Tasks.Task<Agora.Core.Models.PostCategory>
  nameWithType.vb: Task(Of PostCategory)
  fullName.vb: System.Threading.Tasks.Task(Of Agora.Core.Models.PostCategory)
  name.vb: Task(Of PostCategory)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
    href: Agora.Core.Models.PostCategory.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
    href: Agora.Core.Models.PostCategory.html
  - name: )
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.AddPostCategory*
  commentId: Overload:Agora.Infrastructure.Repositories.PostCategoryRepository.AddPostCategory
  href: Agora.Infrastructure.Repositories.PostCategoryRepository.html#Agora_Infrastructure_Repositories_PostCategoryRepository_AddPostCategory_Agora_Core_Models_PostCategory_
  name: AddPostCategory
  nameWithType: PostCategoryRepository.AddPostCategory
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.AddPostCategory
- uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
  commentId: M:Agora.Core.Interfaces.Repositories.IPostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
  parent: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  name: AddPostCategory(PostCategory)
  nameWithType: IPostCategoryRepository.AddPostCategory(PostCategory)
  fullName: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
    name: AddPostCategory
  - name: (
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.AddPostCategory(Agora.Core.Models.PostCategory)
    name: AddPostCategory
  - name: (
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
  - name: )
- uid: Agora.Core.Models.PostCategory
  commentId: T:Agora.Core.Models.PostCategory
  parent: Agora.Core.Models
  href: Agora.Core.Models.PostCategory.html
  name: PostCategory
  nameWithType: PostCategory
  fullName: Agora.Core.Models.PostCategory
- uid: Agora.Core.Models
  commentId: N:Agora.Core.Models
  href: Agora.html
  name: Agora.Core.Models
  nameWithType: Agora.Core.Models
  fullName: Agora.Core.Models
  spec.csharp:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Models
    name: Models
    href: Agora.Core.Models.html
  spec.vb:
  - uid: Agora
    name: Agora
    href: Agora.html
  - name: .
  - uid: Agora.Core
    name: Core
    href: Agora.Core.html
  - name: .
  - uid: Agora.Core.Models
    name: Models
    href: Agora.Core.Models.html
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.DeletePostCategory*
  commentId: Overload:Agora.Infrastructure.Repositories.PostCategoryRepository.DeletePostCategory
  href: Agora.Infrastructure.Repositories.PostCategoryRepository.html#Agora_Infrastructure_Repositories_PostCategoryRepository_DeletePostCategory_Agora_Core_Models_PostCategory_
  name: DeletePostCategory
  nameWithType: PostCategoryRepository.DeletePostCategory
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.DeletePostCategory
- uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
  commentId: M:Agora.Core.Interfaces.Repositories.IPostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
  parent: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  name: DeletePostCategory(PostCategory)
  nameWithType: IPostCategoryRepository.DeletePostCategory(PostCategory)
  fullName: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
    name: DeletePostCategory
  - name: (
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.DeletePostCategory(Agora.Core.Models.PostCategory)
    name: DeletePostCategory
  - name: (
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
  - name: )
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.SaveChangesAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.PostCategoryRepository.SaveChangesAsync
  href: Agora.Infrastructure.Repositories.PostCategoryRepository.html#Agora_Infrastructure_Repositories_PostCategoryRepository_SaveChangesAsync
  name: SaveChangesAsync
  nameWithType: PostCategoryRepository.SaveChangesAsync
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.SaveChangesAsync
- uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.SaveChangesAsync
  commentId: M:Agora.Core.Interfaces.Repositories.IPostCategoryRepository.SaveChangesAsync
  parent: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  name: SaveChangesAsync()
  nameWithType: IPostCategoryRepository.SaveChangesAsync()
  fullName: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.SaveChangesAsync()
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.SaveChangesAsync
    name: SaveChangesAsync
  - name: (
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.SaveChangesAsync
    name: SaveChangesAsync
  - name: (
  - name: )
- uid: System.Threading.Tasks.Task{System.Boolean}
  commentId: T:System.Threading.Tasks.Task{System.Boolean}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<bool>
  nameWithType: Task<bool>
  fullName: System.Threading.Tasks.Task<bool>
  nameWithType.vb: Task(Of Boolean)
  fullName.vb: System.Threading.Tasks.Task(Of Boolean)
  name.vb: Task(Of Boolean)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryExistsAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryExistsAsync
  href: Agora.Infrastructure.Repositories.PostCategoryRepository.html#Agora_Infrastructure_Repositories_PostCategoryRepository_PostCategoryExistsAsync_System_Int64_
  name: PostCategoryExistsAsync
  nameWithType: PostCategoryRepository.PostCategoryExistsAsync
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.PostCategoryExistsAsync
- uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.PostCategoryExistsAsync(System.Int64)
  commentId: M:Agora.Core.Interfaces.Repositories.IPostCategoryRepository.PostCategoryExistsAsync(System.Int64)
  parent: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: PostCategoryExistsAsync(long)
  nameWithType: IPostCategoryRepository.PostCategoryExistsAsync(long)
  fullName: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.PostCategoryExistsAsync(long)
  nameWithType.vb: IPostCategoryRepository.PostCategoryExistsAsync(Long)
  fullName.vb: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.PostCategoryExistsAsync(Long)
  name.vb: PostCategoryExistsAsync(Long)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.PostCategoryExistsAsync(System.Int64)
    name: PostCategoryExistsAsync
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.PostCategoryExistsAsync(System.Int64)
    name: PostCategoryExistsAsync
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.NameExistsAsync*
  commentId: Overload:Agora.Infrastructure.Repositories.PostCategoryRepository.NameExistsAsync
  href: Agora.Infrastructure.Repositories.PostCategoryRepository.html#Agora_Infrastructure_Repositories_PostCategoryRepository_NameExistsAsync_System_String_
  name: NameExistsAsync
  nameWithType: PostCategoryRepository.NameExistsAsync
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.NameExistsAsync
- uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.NameExistsAsync(System.String)
  commentId: M:Agora.Core.Interfaces.Repositories.IPostCategoryRepository.NameExistsAsync(System.String)
  parent: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: NameExistsAsync(string)
  nameWithType: IPostCategoryRepository.NameExistsAsync(string)
  fullName: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.NameExistsAsync(string)
  nameWithType.vb: IPostCategoryRepository.NameExistsAsync(String)
  fullName.vb: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.NameExistsAsync(String)
  name.vb: NameExistsAsync(String)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.NameExistsAsync(System.String)
    name: NameExistsAsync
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.NameExistsAsync(System.String)
    name: NameExistsAsync
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Agora.Infrastructure.Repositories.PostCategoryRepository.ApplySorting*
  commentId: Overload:Agora.Infrastructure.Repositories.PostCategoryRepository.ApplySorting
  href: Agora.Infrastructure.Repositories.PostCategoryRepository.html#Agora_Infrastructure_Repositories_PostCategoryRepository_ApplySorting_System_Linq_IQueryable_Agora_Core_Models_PostCategory__Agora_Core_Interfaces_Filters_IPostCategoryFilter_
  name: ApplySorting
  nameWithType: PostCategoryRepository.ApplySorting
  fullName: Agora.Infrastructure.Repositories.PostCategoryRepository.ApplySorting
- uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.PostCategory},Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  commentId: M:Agora.Core.Interfaces.Repositories.IPostCategoryRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.PostCategory},Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  parent: Agora.Core.Interfaces.Repositories.IPostCategoryRepository
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: ApplySorting(IQueryable<PostCategory>, IPostCategoryFilter)
  nameWithType: IPostCategoryRepository.ApplySorting(IQueryable<PostCategory>, IPostCategoryFilter)
  fullName: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.ApplySorting(System.Linq.IQueryable<Agora.Core.Models.PostCategory>, Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  nameWithType.vb: IPostCategoryRepository.ApplySorting(IQueryable(Of PostCategory), IPostCategoryFilter)
  fullName.vb: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.ApplySorting(System.Linq.IQueryable(Of Agora.Core.Models.PostCategory), Agora.Core.Interfaces.Filters.IPostCategoryFilter)
  name.vb: ApplySorting(IQueryable(Of PostCategory), IPostCategoryFilter)
  spec.csharp:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.PostCategory},Agora.Core.Interfaces.Filters.IPostCategoryFilter)
    name: ApplySorting
  - name: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
  - name: '>'
  - name: ','
  - name: " "
  - uid: Agora.Core.Interfaces.Filters.IPostCategoryFilter
    name: IPostCategoryFilter
  - name: )
  spec.vb:
  - uid: Agora.Core.Interfaces.Repositories.IPostCategoryRepository.ApplySorting(System.Linq.IQueryable{Agora.Core.Models.PostCategory},Agora.Core.Interfaces.Filters.IPostCategoryFilter)
    name: ApplySorting
  - name: (
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
  - name: )
  - name: ','
  - name: " "
  - uid: Agora.Core.Interfaces.Filters.IPostCategoryFilter
    name: IPostCategoryFilter
  - name: )
- uid: System.Linq.IQueryable{Agora.Core.Models.PostCategory}
  commentId: T:System.Linq.IQueryable{Agora.Core.Models.PostCategory}
  parent: System.Linq
  definition: System.Linq.IQueryable`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<PostCategory>
  nameWithType: IQueryable<PostCategory>
  fullName: System.Linq.IQueryable<Agora.Core.Models.PostCategory>
  nameWithType.vb: IQueryable(Of PostCategory)
  fullName.vb: System.Linq.IQueryable(Of Agora.Core.Models.PostCategory)
  name.vb: IQueryable(Of PostCategory)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
    href: Agora.Core.Models.PostCategory.html
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Agora.Core.Models.PostCategory
    name: PostCategory
    href: Agora.Core.Models.PostCategory.html
  - name: )
- uid: System.Linq.IQueryable`1
  commentId: T:System.Linq.IQueryable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  name: IQueryable<T>
  nameWithType: IQueryable<T>
  fullName: System.Linq.IQueryable<T>
  nameWithType.vb: IQueryable(Of T)
  fullName.vb: System.Linq.IQueryable(Of T)
  name.vb: IQueryable(Of T)
  spec.csharp:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Linq.IQueryable`1
    name: IQueryable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.iqueryable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Linq
  commentId: N:System.Linq
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq
  nameWithType: System.Linq
  fullName: System.Linq
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
